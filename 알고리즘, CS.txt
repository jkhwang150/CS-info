기술 면접 질문

1. 프로세스와 스레드의 차이점을 설명하시오.
- 프로세스는 자원을 할당받는 작업의 단위이며, 스레드는 프로세스가 할당받은 자원을 이용하는 실행의 단위이다.
- 스레드는 자원을 공유할 수 있다.
- 프로그램 실행 시 OS에서 프로세서, 메모리 등 자원을 할당받는다. 여기서 스레드는 한 프로세스 내에서 도앚ㄱ되는 여러 실행의 흐름으로 프로세스 내의 주소 공간이나 자원들을 공유하며 실행된다.

2. 힙 메모리 영역과 스택 메모리 영역의 차이를 설명하시오.
- 메모리는 데이터, 스택, 힙 영역으로 나눌 수 있다.
- (데이터 영역) 정적 메모리로 종료될때까지 지워지지 않을 데이터를 저장한다.
- (스택 영역) 잠깐 사용하고 삭제되는 지역변수 or 매개변수가 해당되며 객체가 정의된 블록(스코프)를 벗어날 떄 소멸된다. 함수를 호출하는 위치도 저장되며 힙보다 빠르다.
- (힙 영역) 가비지 컬렉터가 없다면 프로그래머가 직접 할당/해제해줘야 하며 스택보다 큰 메모리를 할당받는데 사용한다. new/포인터와 같이 동적 메모리 할당방식이며 delete를 사용하여 객체 메모리를 반환한다.
- (가비지 컬렉터) 동적으로 할당한 메모리 영역 중 쓰이지 않는 영역을 찾아 해제하는 기능이다.

3. 알고 있는 자료구조에 대해서 설명해 주세요.
-

4. 해시 알고리즘
- (해쉬 정의) 임의의 크기를 가진 데이터를 고정된 크기로 변환(Mapping)시키는 것을 말한다.
- 해쉬 알고리즘은 Key-value를 쌍으로 데이터를 저장한다.. 시간복잡도 O(1)을 지향한다.
- (Hash Table) Index-Value로 구성된다. 
- (Hashing)Data가 Hash Function을 통해 Hash Code를 가지게되고 Code를 통해 Hash Table안에 규칙에 의해 들어간다.

5. 해쉬 충돌 & 해결법
- (충돌) 해시 함수가 서로 다른 두 개의 입력값에 대해 동일한 출력값을 내는 상황
- (해결 1. 체이닝) 해당 index에 값이 있으면 그 뒤에 리스트와 같은 자료구조를 이용하여 Chain처럼 연결한다. 지속적으로 사용하면 리스트가 커져 탐색시간이 오래걸릴 수 있다.
- (해결 2. Open Addressing) 충돌 시 Hash Code에 해당하는 주소가 아닌 다른 주소에 데이터를 저장한다. 빈 주소를 찾거나 테이블의 길이를 늘려 저장한다.

5. 연결리스트와 배열의 차이
- 배열은 미리 메모리 크기를 정하여 해당 크기 만큼의 연속된 메모리 주소를 할당 받아 정적 자료구조로 볼 수 있다. 반면 연결 리스트는 노드를 사용하여 주소를 가리킬 수 있기 때문에 크기를 정할 필요없으며 연속된 메모리 주소를 할당 받지 않아도 되기 때문에 동적 자료구조로 볼 수 있다.

6. DFS와 BFS / 차이점
- (DFS) 깊이 우선 탐색 : 스택 자료구조를 활용한다. 탐색 시간 노드를 스택에 삽입하고 방문처리 한다. 스택의 최상단 노드에 방문하지 않은 인접 노드가 있으면 그 인접 노드를 스택에 넣고 방문 처리를 하고 방문하지 않은 인접 노드가 없으면 스택에서 최상단 노드를 꺼내는 과정을 반복하여 탐색한다.
- (BFS) 넓이 우선 탐색 : 큐 바료 구조를 사용한다. 탐색 시작 노드를 큐에 삽입하고 방문 처리한다. 큐에서 노드를 꺼내 해당 노드의 인접 노드 중에서 방문하지 않은 노드를 모두 큐에 삽입하고 방문 처리하는 과정을 반복하여 탐색한다.
- (차이점) 스택과 큐 자료구조 이용 / DFS는 현재 정점에서 갈 수 있는 끝까지 방문하여 탐색하고 BFS는 현재 정점에 연결된 가까운 점들부터 탐색한다.
- 그래프 모든 정점 방문 > DFS, BFS 둘다 사용
- 경로의 특징을 저장 > DFS
- 최단거리 > BFS

